geom_text(data = mi_means, aes(label = value, y = value + 0.1))
gm
ggsave(plot=gm, "meandering_index.svg", height=5, width=5)
df_all <- data.table::rbindlist(agg_list)
interval = 0.25 # 0.75 minutes per frame
df_all$TrackSpeed <- df_all$TrackSpeed / interval #convert um/frame to um/min
df_all <- df_all %>% filter(
TrackDuration > 1 &
#start_dist_from_center < 81 &
TrackLength > 0 &
celltype == "Fragment-LogNorm")# ignore cells that started outside the gc.
#df_all <- df_all %>% filter(TrackMI <1 )
df <- df_all %>% dplyr::select(., TrackMI, TrackSpeed, TrackDisplacement) %>%
tidyr::gather(key = "variable", value = "value")
df_mi <- df %>% filter(variable == "TrackMI")
mi_means <- aggregate(value ~  variable, df_mi, mean)
mi_means$value <- round(mi_means$value, 2)
gm <- ggplot(df_mi, aes(x=variable, y=value)) +
geom_violin(scale="width")+
geom_boxplot(width=0.1, fill="white", color="black")+
# geom_jitter() +
theme(axis.text.x = element_text(angle=45)) +
geom_text(data = mi_means, aes(label = value, y = value + 0.1))
gm
ggsave(plot=gm, "meandering_index.svg", height=5, width=5)
df_all <- data.table::rbindlist(agg_list)
interval = 0.25 # 0.75 minutes per frame
df_all$TrackSpeed <- df_all$TrackSpeed / interval #convert um/frame to um/min
df_all <- df_all %>% filter(
TrackDuration > 1 &
start_dist_from_center < 81 &
TrackLength > 0 &
celltype == "Fragment-LogNorm")# ignore cells that started outside the gc.
#df_all <- df_all %>% filter(TrackMI <1 )
df <- df_all %>% dplyr::select(., TrackMI, TrackSpeed, TrackDisplacement) %>%
tidyr::gather(key = "variable", value = "value")
df_mi <- df %>% filter(variable == "TrackMI")
mi_means <- aggregate(value ~  variable, df_mi, mean)
mi_means$value <- round(mi_means$value, 2)
gm <- ggplot(df_mi, aes(x=variable, y=value)) +
geom_violin(scale="width")+
geom_boxplot(width=0.1, fill="white", color="black")+
# geom_jitter() +
theme(axis.text.x = element_text(angle=45)) +
geom_text(data = mi_means, aes(label = value, y = value + 0.1))
gm
ggsave(plot=gm, "meandering_index.svg", height=5, width=5)
df_all <- data.table::rbindlist(agg_list)
interval = 0.25 # 0.75 minutes per frame
df_all$TrackSpeed <- df_all$TrackSpeed / interval #convert um/frame to um/min
df_all <- df_all %>% filter(
#TrackDuration > 1 &
start_dist_from_center < 81 &
TrackLength > 0 &
celltype == "Fragment-LogNorm")# ignore cells that started outside the gc.
#df_all <- df_all %>% filter(TrackMI <1 )
df <- df_all %>% dplyr::select(., TrackMI, TrackSpeed, TrackDisplacement) %>%
tidyr::gather(key = "variable", value = "value")
df_mi <- df %>% filter(variable == "TrackMI")
mi_means <- aggregate(value ~  variable, df_mi, mean)
mi_means$value <- round(mi_means$value, 2)
gm <- ggplot(df_mi, aes(x=variable, y=value)) +
geom_violin(scale="width")+
geom_boxplot(width=0.1, fill="white", color="black")+
# geom_jitter() +
theme(axis.text.x = element_text(angle=45)) +
geom_text(data = mi_means, aes(label = value, y = value + 0.1))
gm
ggsave(plot=gm, "meandering_index.svg", height=5, width=5)
df_all <- data.table::rbindlist(agg_list)
interval = 0.25 # 0.75 minutes per frame
df_all$TrackSpeed <- df_all$TrackSpeed / interval #convert um/frame to um/min
df_all <- df_all %>% filter(
TrackDuration > 1 &
start_dist_from_center < 81 &
#TrackLength > 0 &
celltype == "Fragment-LogNorm")# ignore cells that started outside the gc.
#df_all <- df_all %>% filter(TrackMI <1 )
df <- df_all %>% dplyr::select(., TrackMI, TrackSpeed, TrackDisplacement) %>%
tidyr::gather(key = "variable", value = "value")
df_mi <- df %>% filter(variable == "TrackMI")
mi_means <- aggregate(value ~  variable, df_mi, mean)
mi_means$value <- round(mi_means$value, 2)
gm <- ggplot(df_mi, aes(x=variable, y=value)) +
geom_violin(scale="width")+
geom_boxplot(width=0.1, fill="white", color="black")+
# geom_jitter() +
theme(axis.text.x = element_text(angle=45)) +
geom_text(data = mi_means, aes(label = value, y = value + 0.1))
gm
ggsave(plot=gm, "meandering_index.svg", height=5, width=5)
df_all <- data.table::rbindlist(agg_list)
interval = 0.25 # 0.75 minutes per frame
df_all$TrackSpeed <- df_all$TrackSpeed / interval #convert um/frame to um/min
df_all <- df_all %>% filter(
TrackDuration > 1 &
start_dist_from_center < 81 &
TrackLength > 0 &
celltype == "Fragment-LogNorm")# ignore cells that started outside the gc.
#df_all <- df_all %>% filter(TrackMI <1 )
df <- df_all %>% dplyr::select(., TrackMI, TrackSpeed, TrackDisplacement) %>%
tidyr::gather(key = "variable", value = "value")
df_mi <- df %>% filter(variable == "TrackMI")
mi_means <- aggregate(value ~  variable, df_mi, mean)
mi_means$value <- round(mi_means$value, 2)
gm <- ggplot(df_mi, aes(x=variable, y=value)) +
geom_violin(scale="width")+
geom_boxplot(width=0.1, fill="white", color="black")+
# geom_jitter() +
theme(axis.text.x = element_text(angle=45)) +
geom_text(data = mi_means, aes(label = value, y = value + 0.1))
gm
ggsave(plot=gm, "meandering_index.svg", height=5, width=5)
setwd("~/Dropbox (Garvan)/WunnasDropbox/Modelling/PhagoABM_HetBetaMeander/Calibration/MI and Speed/calibration_MI_statmacs")
setwd("~/Dropbox (Garvan)/WunnasDropbox/Modelling/PhagoABM_HetBetaMeander/Calibration/MI and Speed/calibration_MI_statmacs")
source("~/Dropbox (Garvan)/WunnasDropbox/Modelling/PhagoABM_HetBetaMeander/Calibration/MI and Speed/calibration_MI_statmacs/plotMotilityCalibrationTracks.R", echo=TRUE)
df_mi
df_all
View(df_all)
setwd("~/eclipse-workspace/compiled7f-mean-0.5/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags")
source("~/eclipse-workspace/compiled7f-mean-0.5/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags/plotMotilityCalibrationTracks.R", echo=TRUE)
gm
View(df_all)
#Get track length...sum up all positions in each timestep.
x_length <- diff(pos$Position.X)
pos
x_length <- diff(pos$Position.X)
y_length <- diff(pos$Position.Y)
z_length <- diff(pos$Position.Z)
d<-data.frame(x_length, y_length,z_length)
d$delta<- sqrt( d$x_length^2 + d$y_length^2 + d$z_length^2 )
tracklength<-d$delta %>% sum()
x_length <- sum(abs(diff(pos$Position.X)))
y_length <- sum(abs(diff(pos$Position.Y)))
z_length <- sum(abs(diff(pos$Position.Z)))
tracklength <- sqrt( x_length^2 + y_length^2 + z_length^2 )
diff(pos$Position.X
)
abs(diff(pos$Position.X)
)
#Get track length...sum up all positions in each timestep.
x_length <- diff(pos$Position.X)
y_length <- diff(pos$Position.Y)
z_length <- diff(pos$Position.Z)
d<-data.frame(x_length, y_length,z_length)
View(d)
d$delta<- sqrt( d$x_length^2 + d$y_length^2 + d$z_length^2 )
source("~/eclipse-workspace/compiled7f-mean-0.5/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags/plotMotilityCalibrationTracks.R", echo=TRUE)
df_spd <- df %>% filter(variable == "TrackSpeed")
spd_means <- aggregate(value ~  variable, df_spd, mean)
spd_means$value <- round(spd_means$value, 2)
gs <- ggplot(df_spd, aes(x=variable, y=value)) +
geom_violin(scale="width")+
geom_boxplot(width=0.1, fill="white", color="black")+
# geom_jitter() +
theme(axis.text.x = element_text(angle=45)) +
geom_text(data = spd_means, aes(label = value, y = value + 0.1))
gs
df_all
df_all$celltype %>% unique()
df_all <- data.table::rbindlist(agg_list)
df_all$celltype %>% unique()
df_all <- data.table::rbindlist(agg_list)
interval = 0.25 # 0.75 minutes per frame
df_all <- df_all %>% filter(
TrackDuration > 1 &
start_dist_from_center < 81 &
TrackLength > 0 &
celltype == "Fragment-LogNorm")# ignore cells that started outside the gc.
df_all <- df_all %>% filter(TrackMI <1 )
df_all$TrackSpeed <- df_all$TrackSpeed / interval #convert um/frame to um/min
df_all <- data.table::rbindlist(agg_list)
interval = 0.25 # 0.75 minutes per frame
df_all <- df_all %>% filter(
TrackDuration > 1 &
start_dist_from_center < 81 &
TrackLength > 0 &
celltype == "Fragment-LogNorm")# ignore cells that started outside the gc.
df_all <- df_all %>% filter(TrackMI <1 )
df_all$TrackSpeed <- df_all$TrackSpeed / interval #convert um/frame to um/min
df <- df_all %>% dplyr::select(., TrackMI, TrackSpeed, TrackDisplacement) %>%
tidyr::gather(key = "variable", value = "value")
gs <- ggplot(df_spd, aes(x=variable, y=value)) +
geom_violin(scale="width")+
geom_boxplot(width=0.1, fill="white", color="black")+
# geom_jitter() +
theme(axis.text.x = element_text(angle=45)) +
geom_text(data = spd_means, aes(label = value, y = value + 0.1))
gs
gs
source("~/eclipse-workspace/compiled7f-mean-0.5/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags/plotMotilityCalibrationTracks.R", echo=TRUE)
gs
gm
gs
gm
gs
gm
source("~/eclipse-workspace/compiled7f-mean-0.5/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags/plotMotilityCalibrationTracks.R", echo=TRUE)
gm
gs
gm
gs
gm
mi_means
setwd("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs")
source("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs/plotMotilityCalibrationTracks08aug.R", echo=TRUE)
speedm_dirs
speedm_dir
speedm
speedm <- str_extract(speedm_dir, "[^/]+$") %>%
str_extract(., "(.*?)u") %>%
str_sub(., end=-2) %>%
as.numeric()
speedm
source("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs/plotMotilityCalibrationTracks08aug.R", echo=TRUE)
speedm
population_dirs
population
run_dirs
run_number
position_file
setwd("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags")
source("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags/plotMotilityCalibrationTracks08aug.R", echo=TRUE)
source("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags/plotMotilityCalibrationTracks08aug.R", echo=TRUE)
source("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags/plotMotilityCalibrationTracks08aug.R", echo=TRUE)
source("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags/plotMotilityCalibrationTracks08aug.R", echo=TRUE)
track
positions_all
positions_all
position_file
files
run_dir
run_dirs
run_dirs<-list.dirs(paste(getwd(), sep=""), recursive=FALSE)
run_dirs
source("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags/plotMotilityCalibrationTracks08aug.R", echo=TRUE)
source("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags/plotMotilityCalibrationTracks08aug.R", echo=TRUE)
source("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags/plotMotilityCalibrationTracks08aug.R", echo=TRUE)
source("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags/plotMotilityCalibrationTracks08aug.R", echo=TRUE)
gm
df_mi
df
df_all$MotilityPar %>% unique()
df_all$MotilityPar <- paste(df_all$Run, sep="")
df_all <- data.table::rbindlist(agg_list)
interval = 0.25 # 0.75 minutes per frame
df_all$TrackSpeed <- df_all$TrackSpeed / interval #convert um/frame to um/min
df_all <- df_all %>% filter(
TrackDuration > 1 &
start_dist_from_center < 81 &
TrackLength > 0)# ignore cells that started outside the gc.
df_all <- df_all %>% filter(TrackMI <1 )
df_all[is.na(df_all)] <- 0
df_all$MotilityPar <- paste(df_all$Run, sep="")
df <- df_all %>% dplyr::select(., MotilityPar, Run, TrackMI, TrackSpeed, TrackDisplacement) %>%
tidyr::gather(key = "variable", value = "value", -MotilityPar, -Run)
head(df)
# experiment meandering index mean=0.323
MI_real<-NULL
MI_dir <- "../imaging_statistics/MI/"
movies<-list.dirs(path=MI_dir, recursive=FALSE)
for (movie in movies) {
stats_files<-list.files(path=movie, full.names=TRUE)
lapply(stats_files, readData) %>%
purrr::reduce(left_join, by=c("ID", "File")) %>%
dplyr::select(., "ID","File","Track.Displacement.Length","Track.Length") -> lengths_data_temp
colnames(lengths_data_temp)<-c("ID", "Run","Track.Displacement.Length","Track.Length")
MI_real <- rbind(MI_real, lengths_data_temp)
}
MI_real$TrackMI<-MI_real$Track.Displacement.Length/MI_real$Track.Length
colnames(MI_real) <- c("TrackID", "Run", "Track.Displacement.Length","Track.Length",  "value")
MI_real$MotilityPar <- "Observed"
MI_real$variable <- "TrackMI"
speeds_stats <- "../imaging_statistics/Speed/"
movies<-list.dirs(path=speeds_stats, recursive=FALSE)
speed_real<-NULL
for (movie in movies) {
stats_files<-list.files(path=movie, full.names=TRUE)
lapply(stats_files, readData) %>%
purrr::reduce(left_join, by=c("ID", "File")) %>%
dplyr::select(., ID,File,Track.Speed.Mean) -> tmp
colnames(tmp)<-c("ID", "Run","TrackSpeed")
speed_real <- rbind(speed_real, tmp)
}
speed_real$MotilityPar <- "Observed"
colnames(speed_real) <- c("ID", "Run", "value", "MotilityPar")
speed_real$variable <- "TrackSpeed"
speed_real$value <- speed_real$value * 60
df_mi <- df[df$variable == "TrackMI",]
df_mi<-rbind(df_mi, MI_real %>% dplyr::select(-TrackID,-Track.Displacement.Length, -Track.Length))
df_spd <- df[df$variable == "TrackSpeed",]
df_spd<-rbind(df_spd, speed_real %>% dplyr::select(-ID))
df_disp <- df[df$variable == "TrackDisplacement",]
colourCount = length(unique(df_spd$MotilityPar))
getPalette = colorRampPalette(brewer.pal(9, "Spectral"))
mi_means <- aggregate(value ~  MotilityPar, df_mi, mean)
mi_means$value <- round(mi_means$value, 2)
gm <- ggplot(df_mi, aes(x=MotilityPar, y=value)) +
geom_violin(scale="width", aes(fill=MotilityPar)) +
geom_boxplot(width=0.1, fill="white", color="black")+
# geom_jitter() +
geom_text(data = mi_means, aes(label = value, y = value + 0.1)) +
theme(axis.text.x = element_text(angle=45)) +
scale_fill_manual(values=getPalette(colourCount))
gm
setwd("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags")
source("~/eclipse-workspace/compiled8/crossover_results/14diam/0ummin-1macs/1.17ummin-1frags/320_frags/plotMotilityCalibrationTracks08aug.R", echo=TRUE)
gm
gs
g
gm
setwd("~/Dropbox (Garvan)/WunnasDropbox/Modelling/PhagoABM_HetBetaMeander/Calibration/MI and Speed/calibration_MI_statmacs")
source("~/Dropbox (Garvan)/WunnasDropbox/Modelling/PhagoABM_HetBetaMeander/Calibration/MI and Speed/calibration_MI_statmacs/plotMotilityCalibrationTracks.R", echo=TRUE)
gm
setwd("~/eclipse-workspace/08augdropbox/calibration/MI and Speed/calibration_MI_statmacs")
source("~/eclipse-workspace/08augdropbox/calibration/MI and Speed/calibration_MI_statmacs/plotMotilityCalibrationTracks.R", echo=TRUE)
gm
gs
gm
setwd("~/eclipse-workspace/08augdropbox/calibration refactored/MI and Speed/calibration_MI_statmacs")
source("~/eclipse-workspace/08augdropbox/calibration refactored/MI and Speed/calibration_MI_statmacs/plotMotilityCalibrationTracks.R", echo=TRUE)
gm
getwd()
gs
gm
x$MotilityPar %>% unique()
x<-df_mi %>% filter(MotilityPar == "Observed" | MotilityPar == "1.17_0.335_mm-3_ms1.5")
ggplot(x, aes(x=value, color = MotilityPar)) + stat_ecdf(geom="step")
source("~/eclipse-workspace/08dropbox1/calibration refactored/MI and Speed/calibration_MI_statmacs/plotMotilityCalibrationTracks.R", echo=TRUE)
gm
setwd("~/eclipse-workspace/08dropbox1/calibration refactored/MI and Speed/calibration_MI_statmacs")
source("~/eclipse-workspace/08dropbox1/calibration refactored/MI and Speed/calibration_MI_statmacs/plotMotilityCalibrationTracks.R", echo=TRUE)
gm
source("~/eclipse-workspace/08dropbox1/calibration refactored/MI and Speed/calibration_MI_statmacs/plotMotilityCalibrationTracks.R", echo=TRUE)
gm
source("~/eclipse-workspace/08dropbox1/calibration refactored/MI and Speed/calibration_MI_statmacs/plotMotilityCalibrationTracks.R", echo=TRUE)
gm
setwd("~/eclipse-workspace/08dropbox1/calibration refactored3/MI and Speed/calibration_MI_statmacs")
source("~/eclipse-workspace/08dropbox1/calibration refactored3/MI and Speed/calibration_MI_statmacs/plotMotilityCalibrationTracks.R", echo=TRUE)
gm
t.test(x = x %>% filter(MotilityPar == "Observed")%>%pull(value), y = x %>% filter(MotilityPar == "1.17_0.335_mm-3_ms1.5") %>% pull(value))
a= x %>% filter(MotilityPar == "Observed") %>% pull(value)
b= x %>% filter(MotilityPar == "1.17_0.335_mm-3_ms1.5") %>% pull(value)
wilcox.test(a,b)
t.test(a,b)
gm
gs
setwd("~/eclipse-workspace/wkSimulationTBM/calibration refactored3/MI and Speed")
df1<-read.csv("imaging_statistics/TBM_positions/M450 WK27 nuctg GC2 Zstack_hqmacs_Position.csv", header=TRUE, skip=3, stringsAsFactors = FALSE)
setwd("~/eclipse-workspace/wkSimulationTBM/calibration refactored3/MI and Speed")
source("~/eclipse-workspace/wkSimulationTBM/calibration refactored3/MI and Speed/nearest_neighbor_random_spheres.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/calibration refactored3/MI and Speed/nearest_neighbor_random_spheres.R", echo=TRUE)
# ##plotting the nearest neighbour lines for M71 on a transparent png to overlay on the GC image.
nn<-read.csv("imaging_statistics/TBM_positions/M71 TOM GC1 Zstack_hqmacs_Position.csv", header=TRUE, skip=3, stringsAsFactors=F)
source("~/eclipse-workspace/wkSimulationTBM/calibration refactored3/MI and Speed/nearest_neighbor_random_spheres.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/calibration refactored3/MI and Speed/nearest_neighbor_random_spheres.R", echo=TRUE)
sim_plot
mean(simulation_points)
simulated$variable %>% mean()
simulated$value %>% mean()
observed_mean_nn = sim_df %>% filter(variable == "observed_1nn") %>% pull(value) %>% mean()
simulated_mean_nn = sim_df %>% filter(variable == "simulation_points") %>% pull(value) %>% mean()
simulated_mean_nn
observed_mean_nn
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
# save the nndist data so we can plot alongside the experimental nndists in it's own R script.
#saveRDS(nn_rand_df, file="simulatedNNdistPoints.Rds")
nn_rand_df
# save the nndist data so we can plot alongside the experimental nndists in it's own R script.
#saveRDS(nn_rand_df, file="simulatedNNdistPoints.Rds")
nn_rand_df %>% mean()
View(nn_rand_df)
# save the nndist data so we can plot alongside the experimental nndists in it's own R script.
#saveRDS(nn_rand_df, file="simulatedNNdistPoints.Rds")
nn_rand_df$nn1_dists %>% mean()
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
library("spatstat")
library("ggplot2")
library("plotly")
library("lhs")
rm(list=ls())
## R script to generate a .csv of macrophage positions whose nearest neighbour distances (NNDs)
# are faithful to NNDs foudn in imaging.
# The .csv contains xyz positions which:
# 1. Represent the centers of non-overlapping spheres of radius = exclusion_radius.
# note that exclusion radius is NOT the same as macrophage radius.
# 2. The nearest neighbour index of the points is between nni_min and nni_max.
## For use in ABM simulation.
n_macs<-18 # mean macs per GC.
mean_r_gc=81 # mean gc radius. based on a spherical gc with mean volume 2229154 um^3.
n_runs<-100
# This is the parameter that tunes NNDs
# I have tried various numbers, and 14.7 is the value that gives NNDs
# that align to the mean NND in imaging (36.8um)
exclusion_radius = 14.0
random_nonoverlapping_spheres <- function(n_sph, r_sph, r_boundary=81){
result <- matrix(0, nrow=n_sph, ncol=3)
R <- r_boundary
added_spheres<-0
while (added_spheres < n_sph) {
phi <- runif(min = 0, max = pi, n=1)
theta <- runif(min = 0, max = 2*pi, n=1)
r <- runif(min = 0, max = R, n=1)
x<- r * cos(theta) * sin(phi)
y<-r*sin(theta)*sin(phi)
z<-r*cos(phi)
pos=t(as.matrix(c(x, y, z)))
#pos<-sphereplot::sph2car(long=theta, lat=phi, radius = r, deg = FALSE)
if (added_spheres<=1) {
dists_xyz_sq<-(result[1:added_spheres,]-pos)^2
} else {
dists_xyz_sq <- sweep(result[1:added_spheres,], 2, pos)^2
}
dists<-sqrt(rowSums(dists_xyz_sq))
if (  any(dists < 2*r_sph) == FALSE) {
# success, new point doesn't touch any existing spheres
added_spheres<-added_spheres+1
result[added_spheres,]<-pos
}
}
result # matrix of xyz positions of centres of spheres,
}
nn_rand_df<-data.frame(matrix(ncol=1, nrow=0))
points<-list()
range=c(0,81)
for (i in 1:n_runs) {
#random uniform distribution of macs.
sph_pos<-random_nonoverlapping_spheres(n_sph=n_macs, r_sph=exclusion_radius, r_boundary=mean_r_gc) %>% as.data.frame()
sph_pos_pp3<-pp3(sph_pos$V1, sph_pos$V2, sph_pos$V3, xrange = range, yrange = range, zrange = range)
rand_nn_dists<-nndist.pp3(sph_pos_pp3)
mean_1nn<-mean(rand_nn_dists)
points[[i]]<-sph_pos
nn_rand_df<-rbind(nn_rand_df, mean_1nn)
}
nn_rand_df<-as.data.frame(nn_rand_df)
colnames(nn_rand_df)<-c("nn1_dists")
mean_nn_random<-mean(nn_rand_df$nn1_dists)
mean_nn_random
#saveRDS(nn_rand_df, file ="initMacPositionsDataFrame.rds")
# for (i in 1:length(points)) {
#     dfOut <- points[[i]] %>% as.data.frame()
#     write.csv(dfOut, paste("initialPositions_seed",i,".csv", sep=""),  row.names=FALSE)
# }
View(nn_rand_df)
# save the nndist data so we can plot alongside the experimental nndists in it's own R script.
#saveRDS(nn_rand_df, file="simulatedNNdistPoints.Rds")
nn_rand_df$nn1_dists %>% mean()
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
source("~/eclipse-workspace/wkSimulationTBM/generateDispersedPoints.R", echo=TRUE)
saveRDS(nn_rand_df, file ="initMacPositionsDataFrame.rds")
for (i in 1:length(points)) {
dfOut <- points[[i]] %>% as.data.frame()
write.csv(dfOut, paste("initialPositions_seed",i,".csv", sep=""),  row.names=FALSE)
}
1:length(points)
saveRDS(nn_rand_df, file ="initMacPositionsDataFrame.rds")
for (i in 1:length(points)) {
dfOut <- points[[i]] %>% as.data.frame()
write.csv(dfOut, paste("initialPositions_seed",i,".csv", sep=""),  row.names=FALSE)
}
setwd("~/eclipse-workspace/wkSimulationTBM")
getwd()
write.csv(dfOut, paste("initialPositions_seed",i,".csv", sep=""),  row.names=FALSE)
for (i in 1:length(points)) {
dfOut <- points[[i]] %>% as.data.frame()
write.csv(dfOut, paste("initialPositions_seed",i,".csv", sep=""),  row.names=FALSE)
}
### Reading the .csvs to plot their NNDs.
range=c(0,81)
nn_rand_df<-data.frame(matrix(ncol=1, nrow=0))
files<-list.files(paste(getwd(), "/macInitPos_meanNNdist=36.8/", sep=""), recursive=FALSE, full.names=TRUE)
for (file in files) {
df<-read.csv(file)
sph_pos_pp3<-pp3(df$V1, df$V2, df$V3, xrange = range, yrange = range, zrange = range)
rand_nn_dists<-nndist.pp3(sph_pos_pp3)
mean_1nn<-mean(rand_nn_dists)
nn_rand_df<-rbind(nn_rand_df, mean_1nn)
}
colnames(nn_rand_df)<-c("nn1_dists")
plot<-ggplot(data=nn_rand_df, aes(x="nn1_dists", y=nn1_dists)) +
geom_violin( color="black", scale="width", size=1) +
geom_boxplot(width=0.1, fill="white", color="black") +
scale_fill_manual(values=c( "#E41A1C","grey60", "grey60")) +
ylab( bquote('Nearest Neighbour Distance '~(um)) ) #+ theme_minimal_big_font()
plot
# save the nndist data so we can plot alongside the experimental nndists in it's own R script.
#saveRDS(nn_rand_df, file="simulatedNNdistPoints.Rds")
nn_rand_df$nn1_dists %>% mean()
saveRDS(nn_rand_df, file ="initMacPositionsDataFrame.rds")
setwd("~/Dropbox (Garvan)/WunnasDropbox/Modelling/220917/wkSimulationTBM_results/crossover_results/14diam")
source("~/Dropbox (Garvan)/WunnasDropbox/Modelling/220917/wkSimulationTBM_results/crossover_results/14diam/plotResultCrossover.R", echo=TRUE)
files
df
files
count_file
df<-read.csv(count_file, skip=3)
df
